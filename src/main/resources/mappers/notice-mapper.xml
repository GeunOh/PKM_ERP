<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noticeMapper">

	<resultMap type="Notice" id="noticeResult">
		<id column="BNO" property="bNo"/>
		<result column="WRITER" property="writer"/>
		<result column="BCONTENT" property="content"/>
		<result column="CREATE_DATE" property="create_date"/>
		<result column="MODIFY_DATE" property="modify_date"/>
		<result column="DELETE_YN" property="outyn"/>
		<result column="ORG_FILE_NAME" property="org_file_name"/>
		<result column="STORED_FILE_NAME" property="stored_file_name"/>
		<result column="FILE_SIZE" property="file_size"/>
	</resultMap>
	
	<resultMap type="Human" id="humanResult">
		<id column="ENO" property="eno"/>
		<result column="PWD" property="pwd"/>
		<result column="ENAME" property="name"/>
		<result column="EBIRTHDAY" property="birthday"/>
		<result column="EADDRESS" property="address"/>
		<result column="EEMAIL" property="email"/>
		<result column="EPHONE" property="phone"/>
		<result column="INDATE" property="indate"/>
		<result column="OUTDATE" property="outdate"/>
		<result column="OUTYN" property="outyn"/>
		<result column="RCODE" property="rcode"/>
		<result column="RNAME" property="rname"/>
		<result column="DCODE" property="dcode"/>
		<result column="DNAME" property="dname"/>
		<result column="ORIGINALNAME_FILE" property="originalFileName"/>
		<result column="RENAME_FILE" property="renameFileName"/>
		<result column="ADMIN_YN" property="adminyn"/>
	</resultMap>
	
	<resultMap type="Message" id="MessageResult">
		<id column="MNO" property="mno"/>
		<result column="TITLE" property="title"/>
		<result column="WRITER" property="writer"/>
		<result column="RECIEVER" property="reciever"/>
		<result column="ENAME" property="name"/>
		<result column="RNAME" property="rname"/>
		<result column="DNAME" property="dname"/>
		<result column="RENAME_FILE" property="profile"/>
		<result column="BCONTENT" property="bcontent"/>
		<result column="MREAD" property="mread"/>
		<result column="CREATE_DATE" property="createDate"/>
		
	</resultMap>
	
	<select id="NoticeForm" resultMap="noticeResult">
		SELECT N.bno, title, writer, bcontent, create_date, modify_date, org_file_name, stored_file_name, file_size 
		FROM TB_NOTICE N
		LEFT JOIN TB_FILE F ON(N.bno = F.bno)
		WHERE DELETE_YN = 'N' ORDER BY N.bno DESC
	</select>
	
	<insert id="NoticeInsert">
		INSERT INTO TB_NOTICE VALUES(TB_NOTICE_BNO.NEXTVAL, #{title}, #{id}, #{text}, sysdate, sysdate, default)
	</insert>
	
	<update id="NoticeModify">
		UPDATE TB_NOTICE SET TITLE = #{title}, BCONTENT = #{text} WHERE BNO = #{no}
	</update>
	
	<update id="NoticeDelete">
		UPDATE TB_NOTICE SET DELETE_YN = 'Y' WHERE BNO = #{no}
	</update>
	
	<select id="MsgFindMember" resultMap="humanResult">
		SELECT * FROM HUMANLIST 
	    <where>
			<if test="mem == null or mem == ''">ENAME IS NULL</if>
			<if test="mem != null ">ENAME LIKE '%'|| #{mem} ||'%'</if>
	    </where>
	</select>
	
	<insert id="MsgSend">
		INSERT INTO TB_MESSAGE VALUES(TB_MESSAGE_MNO.NEXTVAL, #{title}, #{writer}, #{reciever}, #{content}, 'N', SYSDATE)
	</insert>
	
	<select id="RecieverMsg" resultMap="MessageResult">
		SELECT * FROM TB_MESSAGE 
		JOIN SOLOUSER ON (WRITER = ENO)
		WHERE RECIEVER = #{user}
		ORDER BY CREATE_DATE DESC
	</select>
	
	<select id="SendMsg" resultMap="MessageResult">
		SELECT * FROM TB_MESSAGE 
		JOIN SOLOUSER ON (WRITER = ENO)
		WHERE WRITER = #{user}
		ORDER BY CREATE_DATE DESC
	</select>
	
	<select id="recieverDetail" resultMap="MessageResult">
		SELECT * FROM TB_MESSAGE 
		JOIN SOLOUSER ON (RECIEVER = ENO)
		WHERE MNO = #{mno}
	</select>
	
	<select id="NoReadMsg" resultType="_int">
		SELECT COUNT(*) FROM TB_MESSAGE  WHERE RECIEVER = #{user} AND MREAD = 'N'
	</select>
	
	<select id="sendDetail" resultMap="MessageResult">
		SELECT * FROM TB_MESSAGE 
		JOIN SOLOUSER ON (WRITER = ENO)
		WHERE MNO = #{mno}
	</select>
	
	<update id="recieverReadChk">
		UPDATE TB_MESSAGE SET MREAD = 'Y' WHERE MNO = #{mno}
	</update>
	
	<select id="sendResend" resultMap="MessageResult">
		SELECT * FROM TB_MESSAGE WHERE MNO = #{mno}
	</select>
	
	<insert id="sendResendMsg">
		INSERT INTO TB_MESSAGE VALUES(TB_MESSAGE_MNO.NEXTVAL, #{title}, #{writer}, #{reciever}, #{bcontent}, 'N', SYSDATE)
	</insert>
	
	<insert id="insertFile">
		INSERT INTO TB_FILE VALUES(
			TB_FILE_NO.nextval, 
			TB_NOTICE_BNO.currval, 
			#{org_file_name}, #{stored_file_name}, 
			#{file_size}, sysdate, default)
	</insert>
	
	<select id="selectNotice" resultMap="noticeResult">
		SELECT org_file_name, stored_file_name, file_size 
		FROM TB_NOTICE N
		LEFT JOIN TB_FILE F ON(N.bno = F.bno)
		WHERE N.BNO = #{BNO}
	</select>
	
	<select id="vacationUseDays" resultType="hashmap">
		SELECT USEDAY, (SELECT SUM(USEDAY) FROM TB_VACATION_RECORD WHERE ENO = #{eno}) AS ALLDAY
		FROM TB_VACATION
		WHERE ENO = #{eno}
	</select>
	
	<select id="myVacationList" resultType="Vacation">
		SELECT * 
		FROM VACATIONLIST
		WHERE ENO=#{eno}
	</select>
	
	<select id="myVacationListCount" resultType="_int">
		SELECT COUNT(*)
		FROM VACATIONLIST
		WHERE ENO=#{eno}
	</select>
	
	<insert id="addSupplyRequest">
		INSERT INTO TB_SUPPLY_APPLICATION
		VALUES(TB_SUPPLY_APPLICATION_ANO.nextval, #{eno}, #{scode}, #{sname}, SYSDATE, #{count}, #{comment}, DEFAULT)
	</insert>
	
	<select id="totalCount" resultType="hashmap">
		SELECT COUNT(*) AS totalCount, 
		COUNT(CASE WHEN STATUS = 'N' THEN 1 ELSE NULL END) AS  waitCount,
		COUNT(CASE WHEN STATUS = 'F' THEN 1 ELSE NULL END) AS  failCount,
		COUNT(CASE WHEN STATUS = 'Y' THEN 1 ELSE NULL END) AS  successCount
		FROM SUPPLY_APPLICATION_VIEW
		WHERE eno = #{eno}
	</select>
	
	<select id="supplyRequestList" resultType="hashmap">
		SELECT *
		FROM SUPPLY_APPLICATION_VIEW
		WHERE eno = #{eno}
		ORDER BY APPLICATE_DATE DESC
	</select>
	
	<select id="supplyList" resultType="Supply">
		SELECT S.*, SS.scount 
		FROM TB_SUPPLY S
		JOIN TB_SUPPLY_STOCK SS ON(S.scode = SS.scode)
	</select>
	
	<insert id="addProductInOut">
		INSERT INTO TB_PRODUCT_INOUT VALUES(
			#{ccode}, #{pcode}, #{status}, SYSDATE, 
			<if test="status == 'IN'">#{count}, null,</if>
			<if test="status == 'OUT'">null, #{count},</if>
			#{comment}
		)
	</insert>
</mapper>
