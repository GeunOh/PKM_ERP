create table board
(
	seq  number,         -- 게시물 식별값 
	userid varchar2(40), -- 사용자아이디
	title varchar2(600), -- 제목
	contents clob,  -- 내용(varchar2는 4000이최고, clob - 2g)
	filename1  varchar2(300), -- 첨부파일 
	filename2  varchar2(300), -- 첨부파일 
	filename3  varchar2(300), -- 첨부파일 
	regdate  date,  -- 등록일
	moddate  date,  -- 수정일
	delyn    char(1), -- 삭제여부, Y-삭제, 기본-N
	group_id number,  -- 그룹아이디 
	depth    number,  -- 글의 깊이 
	g_level    number,   -- 그룹내에서의 내 순서 
	item1    varchar2(50), -- 다목적용
	item2    varchar2(50), -- 다목적용
	item3    varchar2(50), -- 다목적용
	item4    varchar2(50), -- 다목적용
	item5    varchar2(50)  -- 다목적용
);

 

alter table board add constraint PK_BOARD primary key (seq);

부모글 insert 
(select nvl(max(seq), 0)+1 from board)

insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 1,'test1', '제목1', '내용1', sysdate, 
1, 0, 1);
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 2,'test2', '제목2', '내용2', sysdate, 
2, 0, 1);
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 3,'test3', '제목3', '내용3', sysdate, 
3, 0, 1);
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 4,'test4', '제목4', '내용4', sysdate, 
4, 0, 1);
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 5,'test5', '제목5', '내용5', sysdate, 
5, 0, 1);


--목록 확인 
select  title from board 
order by group_id desc, g_level asc

--5번 글에 답글 달기 
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 6,'test1', '답글1', '답글내용1', sysdate, 
5, 1, 2);

--답글 확인
select title from board 
order by group_id desc, g_level asc

-- 새로운 답글이 들어갈 위치 찾기
-- 같은 그룹내에서 부모글의 g_level 보다 높은 것들을 
   전부 +1 해준다 
update board set g_level=g_level+1 
where group_id=5 and g_level>1  

select seq, g_level from board;

--새로 추가한다 
insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 7,'test1', '답글2', '답글내용2', sysdate, 
5, 1, 2);

--목록 확인 
select  title from board 
order by group_id desc, g_level asc;

update board set g_level=g_level+1 
where group_id=5 and g_level>1;

commit;

select seq, g_level from board;

insert into board(seq, userid, title, contents,
regdate, group_id, depth, g_level)
values( 7,'test1', '답글2', '답글내용2', sysdate, 
5, 1, 2);

create table test(
    id number primary key,
    text varchar2(20)
);

insert into test values(1,'a');
insert into test values(2,'a');
insert into test values(3,'a');
insert into test values(4,'a');
insert into test values(5,'a');
insert into test values(6,'a');
insert into test values(7,'a');
insert into test values(8,'a');
insert into test values(9,'a');
insert into test values(10,'a');

insert into test values(11,'q');
insert into test values(12,'q');
insert into test values(13,'q');
insert into test values(14,'q');
insert into test values(15,'q');
insert into test values(16,'q');
insert into test values(17,'q');
insert into test values(18,'q');
insert into test values(19,'q');
insert into test values(20,'q');

insert into test values(21,'z');
insert into test values(22,'z');
insert into test values(23,'z');
insert into test values(24,'z');
insert into test values(25,'z');
insert into test values(26,'z');
insert into test values(27,'z');
insert into test values(28,'z');
insert into test values(29,'z');
insert into test values(30,'z');
commit;

select rownum, id, text from test;

select id, text from test where rownum <= 10;

select id, text from test where rownum >= 10 and rownum <= 20;

-- 서브쿼리
select * from (
    select rownum as num, id, text from test where rownum <= 20
) where num > 10;

-- 최신글이 먼저 나와야한다.order by
select * from (
     select rownum as num, id, text from (   
        select id, text from test order by id desc
    ) WHERE rownum <= 10
)where num > 0;

-- 분석함수(윈도우함수)
select id, text, row_number() over(order by id desc) as num
from test;

select * from (
    select id, text, 
           row_number() over(order by id desc) as num,
           ceil(row_number() over(order by id desc)/5-1) as pg
    from test
) where pg=1;

-- ceil (올림함수)

update board set DELYN = 'N';
commit;


select * from
		(
		select
			A.seq
			,nvl(B.username, 'noname') username
			,A.userid
			,A.title
			,A.contents --내용
			,nvl(A.hit , 0) hit --조회수
			,A.group_id
			,A.depth
			,A.g_level
			,to_char(A.regdate, 'yyyy-mm-dd') regdate
			,row_number() over (order by A.group_id desc, A.g_level asc) as num
			,ceil(row_number () over (order by A.group_id desc, A.g_level asc)/10-1) as pg
			from tb_board1 A
			where delyn='N'
			<if test="sel!=null and key!=null">
				<if test="sel.equals('all')">
					and (title like '%'||#{key}||'%'
					or
					contents like '%'||#{key}||'%')
				</if>
				<if test="sel.equals('title')">
					and title like '%'||#{key}||'%'
				</if>
				<if test="sel.equals('contents')">
					and contents like '%'||#{key}||'%'
				</if>
			</if>
		)where pg=#{pg};

alter table board add hit number;
desc board;